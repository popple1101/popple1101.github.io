import tensorflow as tf       #Tensorflow사용을 위한 importfrom tensorflow.examples.tutorials.mnist import input_data# Dataset loadingmnist = input_data.read_data_sets("./samples/MNIST_data/", one_hot=True)# Set up modelx = tf.placeholder(tf.float32, [None, 784])      #심볼릭 변수들을 사용하여 상호작용하는 작업들을 기술W = tf.Variable(tf.zeros([784, 10]))         #tf.Variable를 사용한 예제b = tf.Variable(tf.zeros([10]))               #tf.Variable를 사용한 예제y = tf.nn.softmax(tf.matmul(x, W) + b)         #9번줄과 10번줄을 이용한 모델 구현y_ = tf.placeholder(tf.float32, [None, 10])cross_entropy = -tf.reduce_sum(y_*tf.log(y))train_step = tf.train.GradientDescentOptimizer(0.01).minimize(cross_entropy)# Set up modelx = tf.placeholder(tf.float32, [None, 784])W = tf.Variable(tf.zeros([784, 10]))b = tf.Variable(tf.zeros([10]))y = tf.nn.softmax(tf.matmul(x, W) + b) #모델을 구현y_ = tf.placeholder(tf.float32, [None, 10])  #정답을 입력하기 위한 새 placeholder를 추가cross_entropy = -tf.reduce_sum(y_*tf.log(y))  #교차 엔트로피 −∑y′log(y) 를 구현train_step = tf.train.GradientDescentOptimizer(0.01).minimize(cross_entropy) #비용 최소화에 어떤 변수가 얼마나 영향을 주는지를 계산# Sessioninit = tf.initialize_all_variables()  #만든 변수들을 초기화하는 작업sess = tf.Session()  #세션에서 모델을 시작하고 변수들을 초기화sess.run(init)  #실행# Learningfor i in range(1000):  batch_xs, batch_ys = mnist.train.next_batch(100)  sess.run(train_step, feed_dict={x: batch_xs, y_: batch_ys})# Validationcorrect_prediction = tf.equal(tf.argmax(y,1), tf.argmax(y_,1)) #특정한 축을 따라 가장 큰 원소의 색인을 알려준다accuracy = tf.reduce_mean(tf.cast(correct_prediction, tf.float32))다 #얼마나 많은 비율로 맞았는지 확인# Result should be approximately 91%.print(sess.run(accuracy, feed_dict={x: mnist.test.images, y_: mnist.test.labels})) #테스트 데이터를 대상으로 정확도
